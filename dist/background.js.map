{"version":3,"file":"background.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://privacy-guard-pro/./src/background/index.ts"],"sourcesContent":["\"use strict\";\n/** Notre code actuel (src/background/index.ts) est censé bloquer toute tentative de navigation\n * vers le site example.com. Nous allons vérifier si c'est bien le cas.*/\nconsole.log(\"Privacy Guard Service Worker a démarré !\");\nchrome.runtime.onInstalled.addListener(() => {\n    chrome.declarativeNetRequest.updateDynamicRules({\n        addRules: [\n            {\n                id: 1,\n                priority: 1,\n                action: { type: 'block' },\n                condition: {\n                    urlFilter: '||example.com',\n                    resourceTypes: ['main_frame'],\n                },\n            },\n        ],\n        removeRuleIds: [1]\n    }, () => {\n        console.log(\"Règle de test pour example.com installée.\");\n    });\n});\n/*\nDescription : C'est le cerveau de votre extension. Ce script s'exécute en arrière-plan,\ninvisible pour l'utilisateur. C'est lui qui contient la logique principale.\n\nRôle actuel : Il écoute l'événement d'installation de l'extension (onInstalled) et,\n à ce moment-là, il demande au navigateur de mettre en place une règle simple pour bloquer le site example.com.*/ \n"],"names":[],"sourceRoot":""}