{"version":3,"file":"background.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://privacy-guard-pro/./src/background/rule_manager.ts","webpack://privacy-guard-pro/webpack/bootstrap","webpack://privacy-guard-pro/webpack/runtime/define property getters","webpack://privacy-guard-pro/webpack/runtime/hasOwnProperty shorthand","webpack://privacy-guard-pro/webpack/runtime/make namespace object","webpack://privacy-guard-pro/./src/background/index.ts"],"sourcesContent":["/**\n Description : Ce fichier sera notre \"spécialiste des règles\".\n  Son seul travail sera de télécharger, d'analyser et de formater les listes de blocage pour les donner au navigateur.*/\n// list of url to block \nconst BLOCKLIST_URL = 'https://raw.githubusercontent.com/StevenBlack/hosts/master/ hosts';\nconst RULE_ID_OFFSET = 1000;\n// download and parse block list \nconst fetchAndParseBlockList = async () => {\n    try {\n        const rs = await fetch(BLOCKLIST_URL);\n        if (!rs.ok) {\n            console.error(\"Error occurs while attempting to download domain list\", rs.statusText);\n            return [];\n        }\n        // get the  downloaded list \n        const text = await rs.text();\n        // handle text downloaded extract only essential data \n        const domains = text.split('\\n')\n            .filter((d) => d.startsWith('0.0.0.0'))\n            .map(line => line.split(' ')[1]) // get the domain after the withspace\n            .filter(Boolean); // remove  empty line\n        console.log(`Total domain downloaded ${domains.filter}`);\n        return domains;\n    }\n    catch (error) {\n        console.error(\"Can't to donwload the domain list\", error);\n        return [];\n    }\n};\n// main function \nexport async function updateBlockingRules() {\n    const domains = await fetchAndParseBlockList();\n    if (domains.length === 0) {\n        console.log('Any domaine to bloc, update cancled');\n    }\n    // create  rule array  with chrome Api : declarativeNetRequest.Rule\n    const rules = domains.map((domain, index) => ({\n        id: RULE_ID_OFFSET + index,\n        priority: 1,\n        action: { type: 'block' },\n        condition: {\n            urlFilter: `||${domain}`, // block domain and his sub domain\n            resourceTypes: ['main_frame', 'sub_frame', 'script', 'xmlhttprequest', 'image', 'stylesheet', 'media', 'object'],\n        }\n    }));\n    // get installed rule \n    const existingRules = await chrome.declarativeNetRequest.getDynamicRules(); // EX !\n    const existingRulesIds = existingRules.map(rules => rules.id);\n    // clean rules \n    await chrome.declarativeNetRequest.updateDynamicRules({\n        removeRuleIds: existingRulesIds,\n        addRules: rules\n    });\n    console.log(`Terminé : ${rules.length} block rules installed .`);\n    // EX ! { id: 1000, action: { type: 'block' }, condition: {...} },\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { updateBlockingRules } from './rule_manager';\nconsole.log(\"Privacy Guard Service started !\");\n// checke if the extention has been installed \nchrome.runtime.onInstalled.addListener((detail) => {\n    // check if it's the first installation \n    if (detail.reason === 'install') {\n        console.log('isntallation of block list');\n        updateBlockingRules();\n    }\n});\n/** Notre code actuel (src/background/index.ts) est censé bloquer toute tentative de navigation\n * vers le site example.com. Nous allons vérifier si c'est bien le cas.*/\n/*\nDescription : C'est le cerveau de votre extension. Ce script s'exécute en arrière-plan,\ninvisible pour l'utilisateur. C'est lui qui contient la logique principale.\n\nRôle actuel : Il écoute l'événement d'installation de l'extension (onInstalled) et,\n à ce moment-là, il demande au navigateur de mettre en place une règle simple pour bloquer le site example.com.*/ \n"],"names":[],"sourceRoot":""}